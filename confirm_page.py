# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'confirm_page.ui'
#
# Created by: PyQt5 UI code generator 5.15.4
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
import sqlite3
import numpy
from PyQt5.QtWidgets import QMessageBox

class Ui_confirmpage(object):
    def setupUi(self, confirmpage,food_id=None,student_id=None,student_name=None):
        self.student_id=student_id
        print(self.student_id)
        self.student_name=student_name
        print(self.student_name)
        confirmpage.setObjectName("confirmpage")
        confirmpage.resize(842, 668)
        font = QtGui.QFont()
        font.setFamily("Script MT Bold")
        font.setPointSize(16)
        font.setBold(True)
        font.setWeight(75)
        confirmpage.setFont(font)
        self.centralwidget = QtWidgets.QWidget(confirmpage)
        self.centralwidget.setObjectName("centralwidget")
        self.id_label = QtWidgets.QLabel(self.centralwidget)
        self.id_label.setGeometry(QtCore.QRect(10, 70, 151, 41))
        self.id_label.setObjectName("id_label")
        self.name_label = QtWidgets.QLabel(self.centralwidget)
        self.name_label.setGeometry(QtCore.QRect(10, 130, 151, 41))
        self.name_label.setObjectName("name_label")
        self.food_label = QtWidgets.QLabel(self.centralwidget)
        self.food_label.setGeometry(QtCore.QRect(10, 190, 181, 41))
        self.food_label.setObjectName("food_label")
        self.number_label = QtWidgets.QLabel(self.centralwidget)
        self.number_label.setGeometry(QtCore.QRect(10, 240, 151, 41))
        self.number_label.setObjectName("number_label")
        self.best_by_label = QtWidgets.QLabel(self.centralwidget)
        self.best_by_label.setGeometry(QtCore.QRect(10, 300, 151, 41))
        self.best_by_label.setObjectName("best_by_label")
        self.pushButton = QtWidgets.QPushButton(self.centralwidget,clicked=self.press_me)
        self.pushButton.setGeometry(QtCore.QRect(70, 480, 241, 91))
        self.pushButton.setObjectName("pushButton")
        self.textEdit = QtWidgets.QTextEdit(self.centralwidget)
        self.textEdit.setGeometry(QtCore.QRect(490, 70, 341, 401))
        self.textEdit.setObjectName("textEdit")
        self.confirmationlabel = QtWidgets.QLabel(self.centralwidget)
        self.confirmationlabel.setGeometry(QtCore.QRect(180, -10, 441, 81))
        font = QtGui.QFont()
        font.setPointSize(36)
        self.confirmationlabel.setFont(font)
        self.confirmationlabel.setAlignment(QtCore.Qt.AlignCenter)
        self.confirmationlabel.setObjectName("confirmationlabel")
        self.price_label = QtWidgets.QLabel(self.centralwidget)
        self.price_label.setGeometry(QtCore.QRect(10, 370, 151, 41))
        self.price_label.setObjectName("price_label")
        self.cash_label = QtWidgets.QLabel(self.centralwidget)
        self.cash_label.setGeometry(QtCore.QRect(450, 510, 321, 101))
        font = QtGui.QFont()
        font.setPointSize(48)
        self.cash_label.setFont(font)
        self.cash_label.setObjectName("cash_label")
        self.id_line = QtWidgets.QLineEdit(self.centralwidget)
        self.id_line.setGeometry(QtCore.QRect(170, 70, 311, 41))
        self.id_line.setText("")
        self.id_line.setObjectName("id_line")
        self.name_line = QtWidgets.QLineEdit(self.centralwidget)
        self.name_line.setGeometry(QtCore.QRect(170, 130, 311, 41))
        self.name_line.setText("")
        self.name_line.setObjectName("name_line")
        self.food_line = QtWidgets.QLineEdit(self.centralwidget)
        self.food_line.setGeometry(QtCore.QRect(170, 190, 311, 41))
        self.food_line.setText("")
        self.food_line.setObjectName("food_line")
        self.number_line = QtWidgets.QLineEdit(self.centralwidget)
        self.number_line.setGeometry(QtCore.QRect(170, 240, 311, 41))
        self.number_line.setText("")
        self.number_line.setObjectName("number_line")
        self.best_by_line = QtWidgets.QLineEdit(self.centralwidget)
        self.best_by_line.setGeometry(QtCore.QRect(170, 300, 311, 41))
        self.best_by_line.setText("")
        self.best_by_line.setObjectName("best_by_line")
        self.price_line = QtWidgets.QLineEdit(self.centralwidget)
        self.price_line.setGeometry(QtCore.QRect(170, 370, 311, 41))
        self.price_line.setText("")
        self.price_line.setObjectName("price_line")
        confirmpage.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(confirmpage)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 842, 31))
        self.menubar.setObjectName("menubar")
        confirmpage.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(confirmpage)
        self.statusbar.setObjectName("statusbar")
        confirmpage.setStatusBar(self.statusbar)

        self.retranslateUi(confirmpage)
        QtCore.QMetaObject.connectSlotsByName(confirmpage)
        self.food_id=food_id
        # create or open
        conn = sqlite3.connect("housewife.db")
        # create a cursor
        c = conn.cursor()
        # Operation
        c.execute("""SELECT * FROM housewife_info""")
        results = c.fetchall()
        # commit changes
        conn.commit()
        # close the connection
        conn.close()
        for self.result in results:
            if self.result[0]==self.food_id:

                self.id_line.setText(f"{self.result[0]}")
                self.name_line.setText(f"{self.result[1]}")
                self.food_line.setText(f"{self.result[3]}")
                self.number_line.setText(f"{self.result[2]}")
                ####After that one change the number left
                #####
                ####After that one change the number left
                #####
                ####After that one change the number left
                #####
                ####After that one change the number left
                #####w
                self.best_by_line.setText(f"{self.result[5]}")
                self.price_line.setText(f"{str(numpy.random.randint(10,50))} $")
                self.textEdit.setPlainText(f"{self.result[4]}")



    #cobfirmation page If you have all info it is goona be try
    #if not it is gonna show you except line
    def press_me(self):
        try:

            conn = sqlite3.connect("housewife.db")
            # create a cursor
            c = conn.cursor()
            # Operation

            c.execute(f"""UPDATE housewife_info SET number ={str(int(self.number_line.text()) - 1)}
            WHERE id={self.id_line.text()}""")
            # commit changes
            conn.commit()
            # close the connection
            conn.close()
            # we import the Twilio client from the dependency we just installed
            from twilio.rest import Client

            # the following line needs your Twilio Account SID and Auth Token
            client = Client("AC832ab62c3f5e6c4237a68f6103e97d70", "c2db419f027929a6decbe8d3eb3cd894")

            # change the "from_" number to your Twilio number and the "to" number
            # to the phone number you signed up for Twilio with, or upgrade your
            # account to send SMS to any phone number
            client.messages.create(to=f"+1{self.student_id}",
                                   from_="+19097412679",
                                   body=f"Congrats YOur order for {self.food_line.text()} is placed ")

            self.msg = QMessageBox()
            # Set the information icon
            self.msg.setIcon(QMessageBox.Information)
            # Set the main message
            self.msg.setText(f"thank you {self.student_name}")
            # Set the title of the window
            self.msg.setWindowTitle("Informational Message")
            # Display the message box
            self.msg.show()

            #create plate table and func
            try:
              # Send info to my plate button
              ## create plate database and re run func so that it create and going to except part
              #    # create or open
              #    conn = sqlite3.connect("extra/my_plate.db")
              #    # create a cursor
              #    c = conn.cursor()
              #    # Operation
              #    c.execute("""CREATE TABLE student_info (
              #                                        my_id integer,
              #                                        id integer,
              #                                        name text,
              #                                        food text)""")
              #    # commit changes
              #    conn.commit()
              #    # close the connection
              #    conn.close()
              ## send food to my plate db
              # create or open
              conn = sqlite3.connect("my_plate.db")
              # create a cursor
              c = conn.cursor()
              # Operation
              c.execute("""INSERT INTO student_info VALUES(:my_id,:id,:name,:food)""", {
                  "my_id": self.student_id,
                  "id": self.id_line.text(),
                  "name": self.name_line.text(),
                  "food": self.food_line.text()

              })
              # commit changes
              conn.commit()
              # close the connection
              conn.close()


            except:
                print("error from insert info")


        except:
            print("error from confirn page ")














    def retranslateUi(self, confirmpage):
        _translate = QtCore.QCoreApplication.translate
        confirmpage.setWindowTitle(_translate("confirmpage", "Confirm Page"))
        self.id_label.setText(_translate("confirmpage", "Id/No:"))
        self.name_label.setText(_translate("confirmpage", "NAme/ Last"))
        self.food_label.setText(_translate("confirmpage", "Food Name"))
        self.number_label.setText(_translate("confirmpage", "Number left :"))
        self.best_by_label.setText(_translate("confirmpage", "Best By:"))
        self.pushButton.setText(_translate("confirmpage", "Confirm"))
        self.confirmationlabel.setText(_translate("confirmpage", "Confirmation page"))
        self.price_label.setText(_translate("confirmpage", "Price :"))
        self.cash_label.setText(_translate("confirmpage", "CAsh only"))


